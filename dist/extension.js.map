{"version":3,"file":"extension.js","mappings":"kHAAa,EAAAA,kBAAoB,CACjC,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,WACA,SACA,aACA,WACA,YACA,cACA,UACA,aACA,aACA,kBACA,kBACA,QACA,QACA,OACA,kBACA,OACA,iBACA,iBACA,iBACA,cACA,cACA,aACA,eACA,iBACA,iBACA,iBACA,wBACA,WACA,YACA,WACA,oBACA,mBACA,oBACA,UACA,UACA,SACA,YACA,eACA,SACA,SACA,QACA,QACA,WACA,OACA,iBACA,mBACA,cACA,WACA,wBACA,OACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,QACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,aACA,aACA,aACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,UACA,SACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,aACA,YACA,Y,wFCnKA,eAEa,EAAAC,cAAgB,CAACC,EAAcC,IACjCD,EAAKE,QACR,IAAIC,OAAO,mDAAkD,MAC7D,CAACC,EAAOC,EAAgBC,KACpB,MAAM,YACFC,EAAW,gBACXC,GAUhB,SAA+BC,EAAoBC,EAAuBC,GACtE,IAAIC,EAAkB,GAEtB,MAAMC,EAAkBJ,GAAYK,MAAM,KAS1C,GARuBD,EAAgBE,QAAQ,SAAUC,GACrD,MAAMC,EAAsBP,EAAWQ,SAAUF,GAIjD,OAHIC,GACAL,EAAgBO,KAAKH,GAElBC,CACP,KAEAL,GAAiBQ,OACjB,MAAO,CACHb,aAAc,GAItB,GAA8B,IAA3BM,EAAgBO,OAAc,CAC7B,MAAMC,EAAOR,EAAgB,GAG7B,MAAO,CACHL,gBAHqB,IAAIG,KAAUU,KAInCd,aAAc,E,CAItB,MAAMe,EAAiBT,GAAiBU,KAAIF,GACpCX,EAAWQ,SAASG,GACbA,EAGJ,MAAMV,KAAUU,OAExBG,KAAK,KAGR,MAAO,CACHhB,gBAHoB,MAAMc,OAI1Bf,aAAc,EAEtB,CAnDgBkB,CAAsBnB,EAAW,EAAAR,kBAAmBG,GACxD,OAAGM,EACQ,GAAGF,KAAkBG,IAE1B,GAAGH,MAAmBC,IAAY,G,UCbpDoB,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,uGCtBA,eACA,SAEMQ,EAAmB,CAAC,aAAc,kBAAmB,mBAE9C,EAAAC,SAAYC,IACrB,IAAIC,EAAkB,EAAAC,UAAUC,wBAAuB,EAAGC,WAAUC,gBACpC,SAAxBD,EAASE,IAAIC,QAAqBT,EAAiBjB,SAASuB,EAASI,aACrEH,EAAU,EAAAI,SAASC,eAAe,gDAAgD,G,IAItFC,EAAwB,EAAAF,SAASG,gBACjC,gDACA,CAACC,GAAS,KACN,MAAMC,EAAS,EAAAC,OAAOC,iBAEtB,GAAIF,EAAQ,CACR,MAAMlD,EAAgBkD,EAAOV,SACxBa,UACAlD,MAAM,2DAEX,IACK8C,KACCjD,GACE,IAAIE,OAAO,sDAAsDoD,KAC7DtD,EAAc,KAGtB,OAGJ,IAAID,EAEAwD,EAAYL,EAAOK,UAEvB,GAAIA,EAAUC,QAAS,CACnBzD,EAAOmD,EAAOV,SAASa,UAEvB,MAAMI,EAAYP,EAAOV,SAASkB,OAAO,GACnCC,EAAUT,EAAOV,SAASkB,OAAOR,EAAOV,SAASoB,UAAY,GAEnEL,EAAY,IAAI,EAAAM,UAAUJ,EAAUK,MAAMC,MAAOJ,EAAQG,MAAME,I,MAE/DjE,EAAOmD,EAAOV,SAASa,QAAQE,GAGnC,MAAMU,GAAkB,IAAAnE,eAAcC,EAAOC,GAAiBA,EAAc,IAAO,UAEnFkD,EAAOgB,MAAMC,IACTA,EAAYlE,QAAQsD,EAAWU,EAAgB,G,KAM/D7B,EAAQgC,cAAclD,KAAKmB,GAC3BD,EAAQgC,cAAclD,KAAK6B,EAAsB,EAGxC,EAAAsB,WAAa,M","sources":["webpack://css-to-css-module-transform/./src/utils/constants.ts","webpack://css-to-css-module-transform/./src/utils/helpers.ts","webpack://css-to-css-module-transform/external commonjs \"vscode\"","webpack://css-to-css-module-transform/webpack/bootstrap","webpack://css-to-css-module-transform/./src/extension.ts"],"sourcesContent":["export const definedClassArray = [\n'fs12',\n'fs14',\n'fs16',\n'fs18',\n'fs20',\n'fs24',\n'fs28',\n'fs40',\n'fs48',\n'fs10',\n'fs11',\n'fs13',\n'fs15',\n'fs17',\n'fs19',\n'fs21',\n'fs22',\n'fs23',\n'fs25',\n'fs26',\n'fs27',\n'fs29',\n'fs30',\n'fs31',\n'fs32',\n'fAuto',\n'growwRed',\n'clrRed',\n'primaryClr',\n'clrGreen',\n'clrYellow',\n'growwYellow',\n'clrText',\n'clrSubText',\n'clrText130',\n'secondaryClr130',\n'bgClrLightGreen',\n'fw500',\n'fw400',\n'hide',\n'absolute-center',\n'flex',\n'valign-wrapper',\n'halign-wrapper',\n'vspace-between',\n'flex-column',\n'right-align',\n'left-align',\n'center-align',\n'responsive-img',\n'onMount-appear',\n'onMount-appear',\n'onMount-appear-active',\n'truncate',\n'web-align',\n'dropdown',\n'dropdown__content',\n'dropdown--active',\n'dropdown__content',\n'pos-rel',\n'pos-abs',\n'circle',\n'fullWidth',\n'page-padding',\n'cur-po',\n'cur-no',\n'flo-r',\n'flo-l',\n'width100',\n'card',\n'clickable-text',\n'dashed-hr-border',\n'blurEffect1',\n'clearfix',\n'componentsMainHeading',\n'roww',\n'row',\n'col',\n'l1',\n'l2',\n'l3',\n'l4',\n'l5',\n'l6',\n'l7',\n'l8',\n'l9',\n'l10',\n'l11',\n'l12',\n'l5ths',\n'offset-l1',\n'offset-l2',\n'offset-l3',\n'offset-l4',\n'offset-l5',\n'offset-l6',\n'offset-l7',\n'offset-l8',\n'offset-l9',\n'offset-l10',\n'offset-l11',\n'offset-l12',\n'offset-m1',\n'offset-m2',\n'offset-m3',\n'offset-m4',\n'offset-m5',\n'offset-m6',\n'offset-m7',\n'offset-m8',\n'offset-m9',\n'offset-m10',\n'offset-m11',\n'offset-m12',\n'offset-s1',\n'offset-s2',\n'offset-s3',\n'offset-s4',\n'offset-s5',\n'offset-s6',\n'offset-s7',\n'offset-s8',\n'offset-s9',\n'offset-s10',\n'offset-s11',\n'offset-s12',\n's1',\n's2',\n's3',\n's4',\n's5',\n's6',\n's7',\n's8',\n's9',\n's10',\n's11',\n's12',\n'm1',\n'm2',\n'm3',\n'm4',\n'm5',\n'm6',\n'm7',\n'm8',\n'm9',\n'm10',\n'm11',\n'm12',\n'ph-item',\n'ph-row',\n'ph-col-2',\n'ph-col-4',\n'ph-col-6',\n'ph-col-8',\n'ph-col-10',\n'ph-col-12',\n'ph-avatar',\n'ph-picture',\n'container',\n'web-align'\n];","import { definedClassArray } from \"./constants\";\n\nexport const transformText = (text: string, styleVariable: string) => {\n    return text.replace(\n        new RegExp(`(className|class)\\\\s*=\\\\s*['\"]([\\\\w\\\\s-]+)['\"]`, \"g\"),\n        (match, classAttribute, className) => {\n            const {\n                isConverted,\n                resultantString\n            } = filterAndAppendStyles(className, definedClassArray, styleVariable);\n            if(isConverted) {\n                return `${classAttribute}=${resultantString}`;\n            }\n           return `${classAttribute}=\"${className}\"` ; \n        }\n    );\n};\n\nfunction filterAndAppendStyles(longString: string, wordsArray : string[], styles: string) {\n    let newClassesArray = [];\n\n    const longStringArray = longString?.split(' ');\n    const definedClasses = longStringArray.filter( function( value ){\n        const classAlreadyDefined = wordsArray.includes( value );\n        if(!classAlreadyDefined) {\n            newClassesArray.push(value);\n        }\n        return classAlreadyDefined;\n        });\n    \n    if(!newClassesArray?.length) {   // when only defined classes are present no conversion required\n        return { \n            isConverted : false \n        };\n    }\n        \n    if(longStringArray.length === 1) {   // only when single not defined class present\n        const word = longStringArray[0];\n        const resultantString =  `{${styles}.${word}}`; \n        \n        return {\n            resultantString,\n            isConverted : true\n      };\n    }\n\n    const filteredString = longStringArray?.map(word => {\n         if(wordsArray.includes(word)) {\n            return word; // Return filtered word as it is\n        } \n            \n        return `\\${${styles}.${word}}`; // add style variable to each not defined class\n        \n    }).join(' ');\n    const resultantString = `{\\`${filteredString}\\`}`;\n    \n    return {\n        resultantString,\n        isConverted : true\n    };\n}","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { commands, window, Selection, workspace, ExtensionContext } from \"vscode\";\nimport { transformText } from \"./utils/helpers\";\n\nconst allowedLanguages = [\"javascript\", \"javascriptreact\", \"typescriptreact\"];\n\nexport const activate = (context: ExtensionContext) => {\n    let fileSaveWatcher = workspace.onWillSaveTextDocument(({ document, waitUntil }) => {\n        if (document.uri.scheme === \"file\" && allowedLanguages.includes(document.languageId)) {\n            waitUntil(commands.executeCommand(\"css-to-css-module-transform.transformClasses\", false));\n        }\n    });\n\n    let transformClassCommand = commands.registerCommand(\n        \"css-to-css-module-transform.transformClasses\",\n        (forced = true) => {\n            const editor = window.activeTextEditor;\n\n            if (editor) {\n                const styleVariable = editor.document\n                    .getText()\n                    .match(/^.*?import\\s(.*?)\\sfrom\\s['\"].*?.module.(css|scss)['\"]/m);\n\n                if (\n                    !forced &&\n                    (!styleVariable ||\n                        new RegExp(/\\/\\*[\\s\\S]*?\\*\\/|([^\\\\:]|^)\\/\\/.*|<!--[\\s\\S]*?-->$/).test(\n                            styleVariable[0]\n                        ))\n                ) {\n                    return;\n                }\n\n                let text: string;\n\n                let selection = editor.selection;\n\n                if (selection.isEmpty) {\n                    text = editor.document.getText();\n\n                    const startLine = editor.document.lineAt(0);\n                    const endLine = editor.document.lineAt(editor.document.lineCount - 1);\n\n                    selection = new Selection(startLine.range.start, endLine.range.end);\n                } else {\n                    text = editor.document.getText(selection);\n                }\n\n                const transformedText = transformText(text, (styleVariable && styleVariable[1]) || \"styles\");\n\n                editor.edit((editBuilder) => {\n                    editBuilder.replace(selection, transformedText);\n                });\n            }\n        }\n    );\n\n    context.subscriptions.push(fileSaveWatcher);\n    context.subscriptions.push(transformClassCommand);\n};\n\nexport const deactivate = () => {};\n"],"names":["definedClassArray","transformText","text","styleVariable","replace","RegExp","match","classAttribute","className","isConverted","resultantString","longString","wordsArray","styles","newClassesArray","longStringArray","split","filter","value","classAlreadyDefined","includes","push","length","word","filteredString","map","join","filterAndAppendStyles","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","allowedLanguages","activate","context","fileSaveWatcher","workspace","onWillSaveTextDocument","document","waitUntil","uri","scheme","languageId","commands","executeCommand","transformClassCommand","registerCommand","forced","editor","window","activeTextEditor","getText","test","selection","isEmpty","startLine","lineAt","endLine","lineCount","Selection","range","start","end","transformedText","edit","editBuilder","subscriptions","deactivate"],"sourceRoot":""}